const axios = require('axios')

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ü–µ–Ω—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
function extractPrice(text) {
    if (!text) return null;
    if (text.trim().length < 5) return null;

    console.log('üîé Analyzing text:', text.substring(0, 100));

    // –£–±–∏—Ä–∞–µ–º HTML —Ç–µ–≥–∏ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    const cleanText = text
        .replace(/<[^>]*>/g, ' ')
        .replace(/\s+/g, ' ')
        .trim();

    // –ò—â–µ–º —Ü–µ–Ω—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
    const pricePatterns = [
        /(\d{1,3}(?:\s?\d{3})*(?:\s?[.,]\s?\d{2})?)\s*[‚ÇΩ—Ä—É–±]/i,
        /—Ü–µ–Ω–∞[^\d]{0,50}?(\d{1,3}(?:\s?\d{3})*(?:\s?[.,]\s?\d{2})?)/i,
        /—Å—Ç–æ–∏–º–æ—Å—Ç—å[^\d]{0,50}?(\d{1,3}(?:\s?\d{3})*(?:\s?[.,]\s?\d{2})?)/i,
        /–∫—É–ø–∏—Ç—å[^\d]{0,50}?(\d{1,3}(?:\s?\d{3})*(?:\s?[.,]\s?\d{2})?)/i,
        /(\d{1,3}(?:\s?\d{3})*(?:\s?[.,]\s?\d{2})?)/,
        /(\d{1,3}\s?\d{3})\s*[‚ÇΩ—Ä—É–±]?/i
    ];

    for (let pattern of pricePatterns) {
        const matches = cleanText.match(pattern);
        if (matches && matches[1]) {
            let priceStr = matches[1].replace(/\s/g, '').replace(',', '.');
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–∏ —Ç–∏–ø–∞ "149.990"
            if (priceStr.includes('.') && priceStr.split('.')[1].length === 3) {
                priceStr = priceStr.replace('.', '');
            }
            
            const price = parseFloat(priceStr);

            // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è iPhone
            if (price > 130000 && price < 200000) {
                console.log(`üí∞ Found price: ${price}`);
                return Math.round(price);
            }
        }
    }

    return null;
}

// –í—Å–µ –ø–∞—Ä—Å–µ—Ä—ã –≤ –æ–¥–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ
const storeParsers = {
	BigGeek: async url => {
		try {
			console.log('üîç –ü–∞—Ä—Å–∏–º BigGeek...')
			const { data } = await axios.get(url, {
				timeout: 15000,
				headers: {
					'User-Agent':
						'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
					Accept:
						'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
				},
			})

			return extractPrice(data)
		} catch (error) {
			console.error('‚ùå BigGeek parser error:', error.message)
			return null
		}
	},

	Sotovik: async url => {
		try {
			console.log('üîç –ü–∞—Ä—Å–∏–º Sotovik (—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä)...')
			const { data } = await axios.get(url, {
				timeout: 20000,
				headers: {
					'User-Agent':
						'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
					Accept:
						'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
				},
			})

			// Sotovik - –∏—â–µ–º –≤ –º–µ—Ç–∞-—Ç–µ–≥–∞—Ö (—ç—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–ª–æ!)
			const metaMatches = data.match(
				/<meta[^>]*content="[^"]*(\d{5,7})[^"]*"[^>]*>/g
			)
			if (metaMatches) {
				for (let meta of metaMatches) {
					const priceMatch = meta.match(/(\d{5,7})/)
					if (priceMatch) {
						const price = parseInt(priceMatch[1])
						if (price > 50000 && price < 300000) {
							console.log(`üí∞ Sotovik meta —Ü–µ–Ω–∞: ${price}`)
							return price
						}
					}
				}
			}

			return extractPrice(data)
		} catch (error) {
			console.error('‚ùå Sotovik parser error:', error.message)
			return null
		}
	},

	iPiter: async url => {
		try {
			console.log('üîç –ü–∞—Ä—Å–∏–º iPiter...')
			const { data } = await axios.get(url, {
				timeout: 15000,
				headers: {
					'User-Agent':
						'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
				},
			})

			return extractPrice(data)
		} catch (error) {
			console.error('‚ùå iPiter parser error:', error.message)
			return null
		}
	},

	'iStudio': async (url) => {
    try {
        console.log('üîç –ü–∞—Ä—Å–∏–º iStudio (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä)...');
        const { data } = await axios.get(url, {
            timeout: 20000,
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
            }
        });

        // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –Ω–∞ —Ü–µ–Ω—ã —Å —Ä—É–±–ª—è–º–∏
        const priorityPatterns = [
            /(\d{1,3}(?:\s?\d{3})*(?:\s?[.,]\s?\d{2})?)\s*[‚ÇΩ—Ä—É–±]/gi, // –° —Å–∏–º–≤–æ–ª–æ–º –≤–∞–ª—é—Ç—ã - —Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π
            /—Ü–µ–Ω–∞[^>]*>([^<]+)/gi, // –ü–æ—Å–ª–µ —Å–ª–æ–≤–∞ "—Ü–µ–Ω–∞"
            /—Å—Ç–æ–∏–º–æ—Å—Ç—å[^>]*>([^<]+)/gi, // –ü–æ—Å–ª–µ —Å–ª–æ–≤–∞ "—Å—Ç–æ–∏–º–æ—Å—Ç—å"
            /class="[^"]*price[^"]*"[^>]*>([^<]+)</gi, // –ö–ª–∞—Å—Å—ã —Å price
            /class="[^"]*cost[^"]*"[^>]*>([^<]+)</gi, // –ö–ª–∞—Å—Å—ã —Å cost
            /id="price"[^>]*>([^<]+)</gi // ID price
        ];

        for (let pattern of priorityPatterns) {
            const matches = [...data.matchAll(pattern)];
            for (let match of matches) {
                const price = extractPrice(match[1] || match[0]);
                if (price && price > 140000 && price < 170000) { // –û–∂–∏–¥–∞–µ–º —Ü–µ–Ω—É ~154,999
                    console.log(`üí∞ iStudio –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${price}`);
                    return price;
                }
            }
        }

        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º, –∏—â–µ–º –ª—é–±—ã–µ —á–∏—Å–ª–∞ –Ω–æ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –æ–∂–∏–¥–∞–µ–º–æ–º—É –¥–∏–∞–ø–∞–∑–æ–Ω—É
        const allNumbers = data.match(/\d{5,7}/g);
        if (allNumbers) {
            const uniqueNumbers = [...new Set(allNumbers)];
            for (let num of uniqueNumbers) {
                const price = parseInt(num);
                // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –≤ –æ–∂–∏–¥–∞–µ–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –¥–ª—è iPhone 17 Pro
                if (price > 140000 && price < 170000) {
                    console.log(`üí∞ iStudio –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞: ${price}`);
                    return price;
                }
            }
        }

        console.log('‚ùå iStudio: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–µ–Ω—É');
        return null;

    } catch (error) {
        console.error('‚ùå iStudio parser error:', error.message);
        return null;
    }
},

Technolove: async (url) => {
    try {
        console.log('üîç –ü–∞—Ä—Å–∏–º Technolove (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä)...');
        const { data } = await axios.get(url, {
            timeout: 20000,
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
            }
        });

        console.log('üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML Technolove...');

        // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç JSON-LD
        const jsonLdMatch = data.match(/<script type="application\/ld\+json">([\s\S]*?)<\/script>/);
        if (jsonLdMatch) {
            try {
                const jsonData = JSON.parse(jsonLdMatch[1]);
                if (jsonData.offers && jsonData.offers.price) {
                    const price = parseInt(jsonData.offers.price);
                    if (price > 140000 && price < 200000) {
                        console.log(`üí∞ Technolove JSON-LD —Ü–µ–Ω–∞: ${price}`);
                        return price;
                    }
                }
            } catch (e) {
                console.log('JSON-LD –Ω–µ —Ä–∞—Å–ø–∞—Ä—Å–∏–ª—Å—è');
            }
        }

        // –ò—â–µ–º –≤ –º–µ—Ç–∞-—Ç–µ–≥–∞—Ö
        const metaPriceMatch = data.match(/<meta[^>]*content="[^"]*(\d{5,7})[^"]*"[^>]*>/);
        if (metaPriceMatch) {
            const priceMatch = metaPriceMatch[0].match(/(\d{5,7})/);
            if (priceMatch) {
                const price = parseInt(priceMatch[1]);
                if (price > 140000 && price < 200000) {
                    console.log(`üí∞ Technolove meta —Ü–µ–Ω–∞: ${price}`);
                    return price;
                }
            }
        }

        // –ò—â–µ–º –≤ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞
        const productDataMatch = data.match(/product_data[^>]*>([^<]+)<\/script>/i);
        if (productDataMatch) {
            const priceMatch = productDataMatch[1].match(/"price":\s*(\d+)/);
            if (priceMatch) {
                const price = parseInt(priceMatch[1]);
                if (price > 140000 && price < 200000) {
                    console.log(`üí∞ Technolove product_data —Ü–µ–Ω–∞: ${price}`);
                    return price;
                }
            }
        }

        // –ò—â–µ–º –≤ JavaScript –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        const jsPriceMatches = [
            ...data.matchAll(/price[\s]*:[\s]*['"]?(\d+)['"]?/gi),
            ...data.matchAll(/productPrice[\s]*:[\s]*['"]?(\d+)['"]?/gi),
            ...data.matchAll(/currentPrice[\s]*:[\s]*['"]?(\d+)['"]?/gi),
        ];

        for (let match of jsPriceMatches) {
            const price = parseInt(match[1]);
            if (price > 140000 && price < 200000) {
                console.log(`üí∞ Technolove JS –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞: ${price}`);
                return price;
            }
        }

        // –ò—â–µ–º –≤ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–µ - —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è Technolove
        const htmlPricePatterns = [
            /<span[^>]*class="[^"]*price[^"]*"[^>]*>([^<]+)<\/span>/gi,
            /<div[^>]*class="[^"]*price[^"]*"[^>]*>([^<]+)<\/div>/gi,
            /<b[^>]*class="[^"]*price[^"]*"[^>]*>([^<]+)<\/b>/gi,
            /class="current-price"[^>]*>([^<]+)</gi,
            /itemprop="price"[^>]*content="([^"]+)"/i,
        ];

        for (let pattern of htmlPricePatterns) {
            const matches = [...data.matchAll(pattern)];
            for (let match of matches) {
                const priceText = match[1] || match[0];
                const price = extractPrice(priceText);
                if (price && price > 140000 && price < 200000) {
                    console.log(`üí∞ Technolove HTML —Å–µ–ª–µ–∫—Ç–æ—Ä —Ü–µ–Ω–∞: ${price}`);
                    return price;
                }
            }
        }

        // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –∏—â–µ–º –≤—Å–µ –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ iPhone
        const allNumbers = data.match(/\d{5,7}/g);
        if (allNumbers) {
            const uniqueNumbers = [...new Set(allNumbers)];
            for (let num of uniqueNumbers) {
                const price = parseInt(num);
                // –ë–æ–ª–µ–µ —à–∏—Ä–æ–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è iPhone 17 Pro
                if (price > 140000 && price < 200000) {
                    console.log(`üí∞ Technolove –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞: ${price}`);
                    return price;
                }
            }
        }

        console.log('‚ùå Technolove: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–µ–Ω—É');
        return null;

    } catch (error) {
        console.error('‚ùå Technolove parser error:', error.message);
        return null;
    }
},

	ReStore: async url => {
		try {
			console.log('üîç –ü–∞—Ä—Å–∏–º ReStore...')
			const { data } = await axios.get(url, {
				timeout: 15000,
				headers: {
					'User-Agent':
						'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
				},
			})

			return extractPrice(data)
		} catch (error) {
			console.error('‚ùå ReStore parser error:', error.message)
			return null
		}
	},

	PiterGSM: async url => {
		try {
			console.log('üîç –ü–∞—Ä—Å–∏–º PiterGSM (—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä)...')
			const { data } = await axios.get(url, {
				timeout: 20000,
				headers: {
					'User-Agent':
						'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
					Accept:
						'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
				},
			})

			// PiterGSM –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
			// –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ JSON –¥–∞–Ω–Ω—ã—Ö
			const jsonMatches = [
				...data.matchAll(/"price":\s*"?(\d+(?:\.\d+)?)"?/g),
				...data.matchAll(/"value":\s*"?(\d+(?:\.\d+)?)"?/g),
				...data.matchAll(/"amount":\s*"?(\d+(?:\.\d+)?)"?/g),
			]

			for (let match of jsonMatches) {
				const price = parseInt(match[1])
				if (price > 50000 && price < 300000) {
					console.log(`üí∞ PiterGSM JSON —Ü–µ–Ω–∞: ${price}`)
					return price
				}
			}

			// –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ data-–∞—Ç—Ä–∏–±—É—Ç–∞—Ö
			const dataPriceMatches = data.match(/data-price="(\d+)"/g)
			if (dataPriceMatches) {
				for (let match of dataPriceMatches) {
					const priceMatch = match.match(/data-price="(\d+)"/)
					if (priceMatch) {
						const price = parseInt(priceMatch[1])
						if (price > 50000 && price < 300000) {
							console.log(`üí∞ PiterGSM data-price: ${price}`)
							return price
						}
					}
				}
			}

			// –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
			const structuredPatterns = [
				/<span[^>]*class="[^"]*price[^"]*"[^>]*>([^<]+)</gi,
				/<div[^>]*class="[^"]*price[^"]*"[^>]*>([^<]+)</gi,
				/<strong[^>]*class="[^"]*price[^"]*"[^>]*>([^<]+)</gi,
				/itemprop="price"[^>]*content="([^"]+)"/i,
				/class="product-price"[^>]*>([^<]+)</gi,
			]

			for (let pattern of structuredPatterns) {
				const matches = [...data.matchAll(pattern)]
				for (let match of matches) {
					const price = extractPrice(match[1])
					if (price) return price
				}
			}

			// –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –∏—â–µ–º –ª—é–±—ã–µ –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞
			const largeNumbers = data.match(/\d{5,7}/g)
			if (largeNumbers) {
				const uniqueNumbers = [...new Set(largeNumbers)] // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
				for (let num of uniqueNumbers) {
					const price = parseInt(num)
					if (price > 150000 && price < 250000) {
						console.log(`üí∞ PiterGSM –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ: ${price}`)
						return price
					}
				}
			}

			console.log('‚ùå PiterGSM: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ü–µ–Ω—É')
			return null
		} catch (error) {
			console.error('‚ùå PiterGSM parser error:', error.message)
			return null
		}
	},

	'Wildberries': async (url) => {
    try {
        console.log('üîç –ü–∞—Ä—Å–∏–º Wildberries (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥)...');
        
        const productIdMatch = url.match(/\/(\d+)\/detail/);
        if (!productIdMatch) {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ URL');
            return null;
        }
        
        const productId = productIdMatch[1];
        console.log(`üîç Wildberries ID: ${productId}`);
        
        // –ü–æ–¥—Ö–æ–¥ 1: –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞ —á–µ—Ä–µ–∑ API
        try {
            console.log('üîç –ü–æ–¥—Ö–æ–¥ 1: –ü—Ä—è–º–æ–π API –∑–∞–ø—Ä–æ—Å...');
            // –≠—Ç–æ—Ç endpoint —á–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
            const apiUrl = `https://card.wb.ru/cards/v1/detail?appType=1&curr=rub&dest=-1257786&spp=30&nm=${productId}`;
            
            const { data: apiData } = await axios.get(apiUrl, {
                timeout: 15000,
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
                    'Accept': 'application/json, text/plain, */*',
                    'Referer': 'https://www.wildberries.ru/',
                    'Origin': 'https://www.wildberries.ru'
                }
            });
            
            console.log('üì¶ API –æ—Ç–≤–µ—Ç:', JSON.stringify(apiData).substring(0, 500));
            
            if (apiData && apiData.data && apiData.data.products && apiData.data.products[0]) {
                const product = apiData.data.products[0];
                const salePrice = product.salePriceU;
                const price = product.priceU;
                
                console.log(`üìä Wildberries —Ü–µ–Ω—ã - sale: ${salePrice}, regular: ${price}`);
                
                // –¶–µ–Ω—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –∫–æ–ø–µ–π–∫–∞—Ö, –¥–µ–ª–∏–º –Ω–∞ 100
                if (salePrice) {
                    const actualPrice = Math.round(salePrice / 100);
                    if (actualPrice > 50000 && actualPrice < 300000) {
                        console.log(`üí∞ Wildberries —Ü–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π: ${actualPrice}`);
                        return actualPrice;
                    }
                }
                
                if (price) {
                    const actualPrice = Math.round(price / 100);
                    if (actualPrice > 50000 && actualPrice < 300000) {
                        console.log(`üí∞ Wildberries –æ–±—ã—á–Ω–∞—è —Ü–µ–Ω–∞: ${actualPrice}`);
                        return actualPrice;
                    }
                }
            }
        } catch (apiError) {
            console.log('‚ùå –ü–æ–¥—Ö–æ–¥ 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', apiError.message);
        }
        
        // –ü–æ–¥—Ö–æ–¥ 2: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π API endpoint
        try {
            console.log('üîç –ü–æ–¥—Ö–æ–¥ 2: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π API...');
            const altApiUrl = `https://basket-0{01..10}.wbbasket.ru/vol${productId.substring(0, Math.min(3, productId.length))}/part${productId.substring(0, Math.min(5, productId.length))}/${productId}/info/ru/card.json`;
            
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞
            for (let i = 1; i <= 3; i++) {
                const server = i.toString().padStart(2, '0');
                const testUrl = altApiUrl.replace('{01..10}', server);
                
                try {
                    const { data: altData } = await axios.get(testUrl, {
                        timeout: 10000,
                        headers: {
                            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
                        }
                    });
                    
                    if (altData && (altData.products || altData.imt_name)) {
                        console.log(`‚úÖ –ù–∞—à–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${server}`);
                        if (altData.products && altData.products[0]) {
                            const product = altData.products[0];
                            const price = product.salePriceU || product.priceU;
                            if (price) {
                                const actualPrice = Math.round(price / 100);
                                if (actualPrice > 50000 && actualPrice < 300000) {
                                    console.log(`üí∞ Wildberries –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π API: ${actualPrice}`);
                                    return actualPrice;
                                }
                            }
                        }
                    }
                } catch (serverError) {
                    console.log(`–°–µ—Ä–≤–µ—Ä ${server} –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª`);
                }
            }
        } catch (altError) {
            console.log('‚ùå –ü–æ–¥—Ö–æ–¥ 2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', altError.message);
        }
        
        // –ü–æ–¥—Ö–æ–¥ 3: –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∞–π—Ç–∞
        try {
            console.log('üîç –ü–æ–¥—Ö–æ–¥ 3: –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è...');
            const mobileUrl = `https://m.wildberries.ru/catalog/${productId}/detail.aspx`;
            
            const { data: mobileData } = await axios.get(mobileUrl, {
                timeout: 15000,
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Linux; Android 10; SM-G960F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Mobile Safari/537.36'
                }
            });
            
            // –ò—â–µ–º —Ü–µ–Ω—É –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
            const pricePatterns = [
                /"price":\s*(\d+)/g,
                /"finalPrice":\s*(\d+)/g,
                /data-price="(\d+)"/g,
                /(\d{1,3}(?:\s?\d{3})*)\s*[‚ÇΩ—Ä—É–±]/g
            ];
            
            for (let pattern of pricePatterns) {
                const matches = [...mobileData.matchAll(pattern)];
                for (let match of matches) {
                    const price = parseInt(match[1]);
                    if (price > 50000 && price < 300000) {
                        console.log(`üí∞ Wildberries –º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: ${price}`);
                        return price;
                    }
                }
            }
        } catch (mobileError) {
            console.log('‚ùå –ü–æ–¥—Ö–æ–¥ 3 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', mobileError.message);
        }
        
        // –ü–æ–¥—Ö–æ–¥ 4: –ï—Å–ª–∏ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-—Ü–µ–Ω—É —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        console.log('‚ö†Ô∏è Wildberries: –≤—Å–µ –ø–æ–¥—Ö–æ–¥—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-—Ü–µ–Ω—É');
        console.log('üí° –°–æ–≤–µ—Ç: Wildberries –∞–∫—Ç–∏–≤–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥. –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω—ã –ø—Ä–æ–∫—Å–∏ –∏–ª–∏ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã');
        return null;
        
    } catch (error) {
        console.error('‚ùå Wildberries parser error:', error.message);
        return null;
    }
},

	TehnoYard: async url => {
		try {
			console.log('üîç –ü–∞—Ä—Å–∏–º TehnoYard...')
			const { data } = await axios.get(url, {
				timeout: 15000,
				headers: {
					'User-Agent':
						'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
				},
			})

			return extractPrice(data)
		} catch (error) {
			console.error('‚ùå TehnoYard parser error:', error.message)
			return null
		}
	},
}

module.exports = { storeParsers, extractPrice }
